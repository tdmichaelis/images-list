{"version":3,"sources":["services/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/App.js","index.js"],"names":["unsplash","axios","create","baseURL","headers","Authorization","SearchBar","state","term","handleSubmit","event","preventDefault","props","handleSearchInput","handleChange","setState","target","value","className","onSubmit","this","type","placeholder","onChange","React","Component","ImageCard","imageRef","createRef","height","current","addEventListener","clientHeight","image","alt_description","urls","style","gridRowEnd","ref","alt","src","small","App","images","a","get","data","results","Promise","reject","renderImageList","map","key","id","ReactDOM","render","document","querySelector"],"mappings":"kRASeA,E,OAPAC,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DC2BJC,E,4MA7BbC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAKC,MAAMC,kBAAkB,EAAKN,MAAMC,O,EAG1CM,aAAe,SAACJ,GACd,EAAKK,SAAS,CACZP,KAAME,EAAMM,OAAOC,S,uDAKrB,OACE,yBAAKC,UAAU,cACb,0BAAMA,UAAU,UAAUC,SAAUC,KAAKX,cACvC,yBAAKS,UAAU,SACb,2BAAOD,MAAOG,KAAKb,MAAMC,KAAMa,KAAK,OAAOC,YAAY,YAAYC,SAAUH,KAAKN,sB,GAtBtEU,IAAMC,WCyBfC,E,kDAxBb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,SAAWH,IAAMI,YACtB,EAAKrB,MAAQ,CACXsB,OAAQ,GAJO,E,gEAQE,IAAD,OAClBT,KAAKO,SAASG,QAAQC,iBAAiB,QAAQ,WAC7C,EAAKhB,SAAS,CACZc,OAAQ,EAAKF,SAASG,QAAQE,oB,+BAK1B,IAAD,EACyBZ,KAAKR,MAAMqB,MAArCC,EADC,EACDA,gBAAiBC,EADhB,EACgBA,KACvB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUjB,KAAKb,MAAMsB,SAAWS,IAAKlB,KAAKO,SAAUY,IAAKL,EAAiBM,IAAKL,EAAKM,Y,GApB1FjB,IAAMC,WC+DfiB,G,kNArDbnC,MAAQ,CACNoC,OAAQ,I,EAGV9B,kB,uCAAoB,WAAOL,GAAP,iBAAAoC,EAAA,+EAWK5C,EAAS6C,IAAI,wBAA0BrC,GAX5C,iBAWVsC,EAXU,EAWVA,MACGC,SACP,EAAKhC,SAAS,CACZ4B,OAAQG,EAAKC,UAdD,yEAkBTC,QAAQC,OAAR,OAlBS,yD,wDAsBpBC,gBAAkB,WAChB,OAAO,EAAK3C,MAAMoC,OAAOQ,KAAI,SAAAlB,GAC3B,OACE,kBAAC,EAAD,CAAWA,MAAOA,EAAOmB,IAAKnB,EAAMoB,S,uDAaxC,OACE,yBAAKnC,UAAU,gCACb,kBAAC,EAAD,CAAWL,kBAAmBO,KAAKP,oBACnC,yBAAKK,UAAU,+BACZE,KAAK8B,wB,GA/CE1B,IAAMC,YCNxB6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.6dfa64d2.chunk.js","sourcesContent":["import axios from 'axios'\n\nlet unsplash = axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: 'Client-ID 5lOuz6LQzm8KwbCaYmyz3dGOoCP4I9aKFXrUkRvh7O0'\n  }\n})\n\nexport default unsplash","import React from 'react'\n\nclass SearchBar extends React.Component {\n  state = {\n    term: ''\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    //use term for request\n    this.props.handleSearchInput(this.state.term)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      term: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form className=\"ui form\" onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <input value={this.state.term} type=\"text\" placeholder=\"Search...\" onChange={this.handleChange} />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar","import React from 'react'\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.imageRef = React.createRef()\n    this.state = {\n      height: 0\n    }\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', () => {\n      this.setState({\n        height: this.imageRef.current.clientHeight\n      })\n    })\n  }\n\n  render() {\n    let { alt_description, urls } = this.props.image\n    return (\n      <img style={{ gridRowEnd: `span ${this.state.height}`}} ref={this.imageRef} alt={alt_description} src={urls.small} />\n    )\n  }\n}\n\nexport default ImageCard","import React from 'react'\nimport unsplash from '../services/unsplash'\n\n// components\nimport SearchBar from './SearchBar'\nimport ImageCard from './ImageCard'\n//styles\nimport '../styles.css'\n\n// import Ex, { test1, testFunction } from './example'\n\nclass App extends React.Component {\n  state = {\n    images: []\n  }\n\n  handleSearchInput = async (term) => {\n    // /search/photos\n    // 5lOuz6LQzm8KwbCaYmyz3dGOoCP4I9aKFXrUkRvh7O0\n\n    // fetch('https://api.unsplash.com/search/photos?query=cars&client_id=5lOuz6LQzm8KwbCaYmyz3dGOoCP4I9aKFXrUkRvh7O0')\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     console.log(data)\n    //   })\n\n    try {\n      let { data } = await unsplash.get('/search/photos?query=' + term)\n      if (data.results) {\n        this.setState({\n          images: data.results\n        })\n      }\n    } catch(e) {\n      return Promise.reject(e)\n    }\n    \n  }\n  renderImageList = () => {\n    return this.state.images.map(image => {\n      return (\n        <ImageCard image={image} key={image.id} />\n      )\n    })\n  }\n  // [\n  //   <ImageCard image={image} />,\n  //   <ImageCard image={image} />,\n  //   <ImageCard image={image} />,\n  //   <ImageCard image={image} />\n  // ]\n\n  render() {\n    // console.log(Ex, test1, testFunction)\n    return (\n      <div className=\"images-list-app ui container\">\n        <SearchBar handleSearchInput={this.handleSearchInput} />\n        <div className=\"images-container ui segment\">\n          {this.renderImageList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)"],"sourceRoot":""}